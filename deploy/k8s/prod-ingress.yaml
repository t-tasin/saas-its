---
# Cert-manager ClusterIssuer for Let's Encrypt (Production SSL)
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    # Production Let's Encrypt server
    server: https://acme-v02.api.letsencrypt.org/directory
    email: your-email@example.com  # UPDATE THIS
    privateKeySecretRef:
      name: letsencrypt-prod-key
    solvers:
    - http01:
        ingress:
          class: nginx

---
# Production Ingress with SSL/TLS
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: saas-its-ingress
  namespace: saas-its-prod
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # Rewrite path to remove service prefix
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    # Increase timeouts for long-running requests
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    # Enable CORS (if needed for frontend)
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://yourdomain.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, PATCH, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Tenant-Id"
    # Rate limiting (optional)
    nginx.ingress.kubernetes.io/limit-rps: "100"
spec:
  tls:
  - hosts:
    - api.yourdomain.com  # UPDATE THIS
    secretName: saas-its-tls
  rules:
  - host: api.yourdomain.com  # UPDATE THIS
    http:
      paths:
      # Identity Service routes
      - path: /identity(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: identity-svc
            port:
              number: 3000
      
      # Alternative: Identity auth routes at /v1/auth
      - path: /v1/auth(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: identity-svc
            port:
              number: 3000
      
      # Ticket Service routes
      - path: /tickets(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: ticket-svc
            port:
              number: 3002
      
      - path: /v1/tickets(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: ticket-svc
            port:
              number: 3002
      
      # Asset Service routes
      - path: /assets(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: asset-svc
            port:
              number: 3003
      
      - path: /v1/assets(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: asset-svc
            port:
              number: 3003
      
      # Reservation Service routes
      - path: /reservations(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: reservation-svc
            port:
              number: 5003
      
      - path: /v1/reservations(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: reservation-svc
            port:
              number: 5003
      
      # Health check endpoint (can route to any service)
      - path: /health
        pathType: Exact
        backend:
          service:
            name: identity-svc
            port:
              number: 3000

